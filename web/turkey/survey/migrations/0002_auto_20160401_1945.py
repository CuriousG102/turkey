# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-01 19:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('survey', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditorClicksSpecific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Clicks Specific Auditors',
                'verbose_name': 'Clicks Specific Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorClicksSpecificData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('dom_type', models.TextField(help_text='DOM type of element that was clicked', verbose_name='clicks specific type')),
                ('dom_id', models.TextField(blank=True, help_text='DOM ID of element that was clicked', null=True, verbose_name='clicks specific id')),
                ('dom_class', models.TextField(blank=True, help_text='DOM class of element that was clicked', null=True, verbose_name='clicks specific id')),
                ('dom_name', models.TextField(blank=True, help_text='DOM name of element that was clicked', null=True, verbose_name='clicks specific id')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorClicksSpecific')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorClicksTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Clicks Total Auditors',
                'verbose_name': 'Clicks Total Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorClicksTotalData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('count', models.IntegerField(help_text='total number of times a user clicked', verbose_name='clicks total')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorClicksTotal')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorFocusChanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Focus Changes Auditors',
                'verbose_name': 'Focus Changes Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorFocusChangesData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('time', models.IntegerField(help_text='timestamps of whenever the user switches out of focus', verbose_name='focus changes times')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorFocusChanges')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorKeypressesSpecific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Keypresses Specific Auditors',
                'verbose_name': 'Keypresses Specific Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorKeypressesSpecificData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('key', models.TextField(help_text='specific keys pressed by the user', verbose_name='keypresses specific')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorKeypressesSpecific')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorKeypressesTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Keypresses Total Auditors',
                'verbose_name': 'Keypresses Total Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorKeypressesTotalData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('count', models.IntegerField(help_text='total number of times a user pressed a key', verbose_name='keypresses total')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorKeypressesTotal')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorMouseMovementSpecific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Mouse Movement Specific Auditors',
                'verbose_name': 'Mouse Movement Specific Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorMouseMovementSpecificData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('x', models.IntegerField(help_text='ending x coordinate of mouse whenever user moves mouse', verbose_name='mouse movement x coordinate')),
                ('y', models.IntegerField(help_text='ending y coordinate of mouse whenever user moves mouse', verbose_name='mouse movement y coordinate')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorMouseMovementSpecific')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorMouseMovementTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Mouse Movement Total Auditors',
                'verbose_name': 'Mouse Movement Total Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorMouseMovementTotalData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('amount', models.IntegerField(help_text='total number of pixels traversed by the cursor due to user moving mouse', verbose_name='mouse movement total')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorMouseMovementTotal')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorOnFocusTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'On Focus Time Auditors',
                'verbose_name': 'On Focus Time Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorOnFocusTimeData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('milliseconds', models.IntegerField(help_text='total time in milliseconds that the user spent on focus', verbose_name='on focus time')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorOnFocusTime')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorPastesSpecific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Pastes Specific Auditors',
                'verbose_name': 'Pastes Specific Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorPastesSpecificData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('data', models.TextField(help_text='specific content pasted by the user', verbose_name='pastes specific')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorPastesSpecific')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorPastesTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'verbose_name_plural': 'Pastes Total Auditors',
                'verbose_name': 'Pastes Total Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorPastesTotalData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('count', models.IntegerField(help_text='number of times a user pastes something (^V)', verbose_name='pastes total')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorPastesTotal')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorRecordedTimeDisparity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Recorded Time Disparity Auditors',
                'verbose_name': 'Recorded Time Disparity Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorRecordedTimeDisparityData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('milliseconds', models.IntegerField(help_text='total time in milliseconds that the user spent off focus', verbose_name='recorded time disparity')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorRecordedTimeDisparity')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorScrolledPixelsSpecific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Scrolled Pixels Specific Auditors',
                'verbose_name': 'Scrolled Pixels Specific Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorScrolledPixelsSpecificData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('position_h', models.IntegerField(help_text='horizontal position on page after scrolling', verbose_name='horizontal scrolled pixels position')),
                ('change_h', models.IntegerField(help_text='horizontal change in position on page after scrolling', verbose_name='horizontal scrolled pixels change')),
                ('position_v', models.IntegerField(help_text='vertical position on page after scrolling', verbose_name='vertical scrolled pixels position')),
                ('change_v', models.IntegerField(help_text='vertical change in position on page after scrolling', verbose_name='vertical scrolled pixels change')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorScrolledPixelsSpecific')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorScrolledPixelsTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Scrolled Pixels Total Auditors',
                'verbose_name': 'Scrolled Pixels Total Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorScrolledPixelsTotalData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('horizontal', models.IntegerField(help_text='total number of pixels scrolled horizontally by the user', verbose_name='scrolled horizontal pixels total')),
                ('vertical', models.IntegerField(help_text='total number of pixels scrolled vertically by the user', verbose_name='scrolled vertical pixels total')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorScrolledPixelsTotal')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.CreateModel(
            name='AuditorWithinTypingDelay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('task', models.ForeignKey(help_text='Task that this is linked to', on_delete=django.db.models.deletion.CASCADE, to='survey.Task', verbose_name='Associated Task')),
            ],
            options={
                'ordering': ['task', '-updated', '-created'],
                'verbose_name_plural': 'Within Typing Delay Auditors',
                'verbose_name': 'Within Typing Delay Auditor',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditorWithinTypingDelayData',
            fields=[
                ('auditordata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='survey.AuditorData')),
                ('milliseconds', models.IntegerField(blank=True, help_text='whether the user typed within the delay period', null=True, verbose_name='within typing delay')),
                ('general_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.AuditorWithinTypingDelay')),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
            bases=('survey.auditordata',),
        ),
        migrations.AlterModelOptions(
            name='auditorbeforetypingdelay',
            options={'ordering': ['task', '-updated', '-created'], 'verbose_name': 'Before Typing Delay Auditor', 'verbose_name_plural': 'Before Typing Delay Auditors'},
        ),
        migrations.AlterModelOptions(
            name='auditortotaltasktime',
            options={'ordering': ['task', '-updated', '-created'], 'verbose_name': 'Total Task Time Auditor', 'verbose_name_plural': 'Total Task Time Auditors'},
        ),
        migrations.AlterField(
            model_name='auditorbeforetypingdelaydata',
            name='milliseconds',
            field=models.IntegerField(blank=True, help_text='total time in milliseconds that the user took before typing', null=True, verbose_name='before typing delay'),
        ),
        migrations.AlterField(
            model_name='auditortotaltasktimedata',
            name='milliseconds',
            field=models.IntegerField(help_text='total time in milliseconds that the user spent on the task page', verbose_name='total task time'),
        ),
    ]
